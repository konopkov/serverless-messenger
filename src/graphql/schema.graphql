schema {
    query: Query
    mutation: Mutation
}

"""
Root query type
"""
type Query {
    getMessages(filter: MessageFilter!, first: Int, after: String): PaginatedMessages
}

"""
Root mutation type
"""
type Mutation {
    sendMessage(input: MessageInput!): Message
}

"""
Page info type for pagination
"""
type PageInfo {
    hasNextPage: Boolean
    endCursor: String
}

"""
Delivery method type
"""
enum DeliveryMethod {
    EMAIL
    SMS
}

"""
Delivery status type
"""
enum DeliveryStatus {
    PENDING
    ACCEPTED
    DELIVERED
    FAILED
}

"""
Message type
"""
type Message {
    id: String
    recipientId: String
    to: String
    senderId: String
    from: String
    subject: String
    body: String
    deliveryMethod: DeliveryMethod
    deliveryStatus: DeliveryStatus
    createdAt: String
}

"""
Paginated result of getMessages query
"""
type PaginatedMessages {
    data: [Message]
    pageInfo: PageInfo
}

"""
Message filter type for getMessages query
"""
input MessageFilter {
    to: String!
}

"""
Message input type for sendMessage mutation
"""
input MessageInput {
    recipientId: String
    to: String!
    senderId: String
    from: String
    subject: String
    body: String!
    deliveryMethod: DeliveryMethod!
}
